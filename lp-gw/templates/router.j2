#! /bin/bash
# {{ ansible_managed}}
# This script adds routes based on the network topology configured in ansible-lanparty

start() {
{% for name, value in netif.iteritems() %}

  # Add routes to internal networks to the default routing table
{%- if value.internal is defined and value.internal %}
{% for r in internal_networks | default([]) %}
  echo "Adding route to internal network {{ r }} via {{ value.nexthop }}"
  ip route add {{ r }} via {{ value.nexthop }}
{% endfor %}
{% endif %}

  # Add external routes to their own routing table
  # Send returning packets to the 'main' table with internal routes
{%- if value.route is defined and value.addr != 'dhcp' %}
  echo "Adding default route via {{ value.nexthop }} to table {{ name }}"
  ip route add default via {{ value.nexthop }} table {{ name }}
{% set pref = 10000 + value.route %}
  ip rule add pref {{ pref }} iif {{ name }} table main
{% set pref = 20000 + value.route %}
  echo "Adding rule {{ pref }} for fwmark 0x{{ value.route }}0 for table {{ name }}"
  ip rule add pref {{ pref }} fwmark 0x{{ value.route }}0/0xf0 table {{ name }}
{% endif %}

{%- endfor %}

  # Flush the route cache after modifications
  echo "Flushing route cache .."
  ip route flush cache

  return
}

stop() {
{% for name, value in netif.iteritems() %}

{%- if value.internal is defined and value.internal %}
{% for r in internal_networks | default([]) %}
  echo "Deleting route to internal network {{ r }}"
  ip route del {{ r }}
{% endfor %}
{% endif %}

{%- if value.route is defined and value.addr != 'dhcp' %}
  echo "Deleting default route from table {{ name }}"
  ip route del default table {{ name }}
{% set pref = 10000 + value.route %}
  ip rule del pref {{ pref }}
{% set pref = 20000 + value.route %}
  echo "Deleting rule {{ pref }} for table {{ name }}"
  ip rule del pref {{ pref }} table {{ name }}
{% endif %}

{%- endfor %}

  # Flush the route cache after modifications
  echo "Flushing route cache .."
  ip route flush cache

  return
}

case "$1" in
  start)
    echo "Adding routes .."
    if start; then
      echo "Routes added successfully, exiting."
      exit 0
    else
      echo "Error adding routes!" >&2
      exit 1
    fi
    ;;
  stop)
    echo "Removing routes .."
    if stop; then
      echo "Routes removed successfully, exiting."
      exit 0
    else
      echo "Error removing routes!" >&2
      exit 1
    fi
    ;;

  reload|restart)
    echo "Reloading routes .."
    if stop; start; then
      echo "Routes reloaded successfully!"
      exit 0
    else
      echo "Error reloading routes!" >&2
    fi
    ;;

  *)
    echo "Usage: $0 {start|stop|reload|restart}"
    exit 1
esac

exit 0