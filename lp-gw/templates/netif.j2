# {{ ansible_managed }}
# Make sure the table mappings in /etc/iproute2/rt_tables are rendered before this.
#

# The loopback network interface
auto lo
iface lo inet loopback

{% for i, c in netif|dictsort()%}
allow-hotplug {{ i }}
iface {{ i }} inet static
  address {{ c.addr }}
  netmask {{ c.netmask }}
  {% if c.ns is defined and c.ns -%}
  dns-nameservers {% for h in groups['dns'] %}{{ hostvars[h]['ansible_default_ipv4']['address'] }}
  {% endfor -%}
  dns-search {{ domains.lan }}
  {% endif %}
  {%- if c.core is defined -%}
  {%- for r in internal_networks -%}
  post-up ip route add {{ r }} via {{ c.core }}
  post-down ip route del {{ r }} via {{ c.core }}
  {% endfor %}
  {% endif %}
  {%- if c.isp is defined %}
  {%- set pref = fw_rt_pref + fw_rt_tables[c.isp][0] -%}
  post-up ip route add default via {{ fw_rt_tables[c.isp][1] }} table {{ c.isp }}
  post-up ip rule add pref {{ pref }} fwmark {{ fw_mark.link[c.isp] }}/0xf0 table {{ c.isp }}
  {% if fw_rt_tables[c.isp][2] is defined and fw_rt_tables[c.isp][2] -%}
  post-up ip rule add pref {{ fw_rt_pref + 1000 }} table {{ c.isp }}
  post-down ip rule del pref {{ fw_rt_pref + 1000 }}
  {% endif -%}
  post-down ip rule del pref {{ pref }}
  post-down ip route del default via {{ fw_rt_tables[c.isp][1] }} table {{ c.isp }}
  {% endif %}

{% endfor %}
