---
- name: IPTables | Render Rules
  template:
    src: iptables.j2
    dest: "{{ iptables_path | default('/etc/iptables/rules.v4') }}"
    validate: iptables-restore -t %s
  notify: restore iptables
  tags: [ 'iptables' ]

- name: IPTables | Remove custom netfilter-sysctl
  file:
    path: /etc/init.d/netfilter-sysctl
    state: absent

- name: IPTables | Stop custom netfilter-sysctl service
  service:
    name: netfilter-sysctl
    state: stopped
    enabled: false
  ignore_errors: true

- name: IPTables | Netfilter unit w/ sysctl reload
  template:
    src: units/sysctl-unit.j2
    dest: /etc/systemd/system/netfilter-persistent.service
  notify: reload daemons

- name: IPTables | Custom netfilter-sysctl service
  service:
    name: netfilter-persistent
    state: started
    enabled: true
  tags: [ 'services' ]

- name: IPTables | Host Kernel Parameters
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: yes
    reload: yes
  tags: [ 'kernel' ]
  when: not ansible_container
  with_items:
    - { name: 'net.netfilter.nf_conntrack_max', value: "{{ gw_config.conntrack_max | default(300000) }}" }
    - { name: 'net.netfilter.nf_conntrack_buckets', value: "{{ gw_config.conntrack_max | default(300032) }}" }

- name: IPTables | NetFilter Kernel Parameters
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: yes
    reload: yes
  tags: [ 'kernel' ]
  with_items:
    - { name: 'net.netfilter.nf_conntrack_timestamp', value: '1' }
    - { name: 'net.netfilter.nf_conntrack_icmp_timeout', value: '5' }
    - { name: 'net.netfilter.nf_conntrack_udp_timeout', value: '10' }
    - { name: 'net.netfilter.nf_conntrack_udp_timeout_stream', value: '60' }

- meta: flush_handlers
