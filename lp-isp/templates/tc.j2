#! /bin/sh

### BEGIN INIT INFO
# Provides:             tc
# Required-Start:       $remote_fs $syslog $network
# Required-Stop:        $remote_fs $syslog $network
# Default-Start:        2 3 4 5
# Default-Stop:
# Short-Description:    TC ruleset provider
### END INIT INFO

set -e

# /etc/init.d/tc: Manage TC ruleset

DOWNLOAD_IFACE="{{ isp_if.lan }}"
UPLOAD_IFACE="{{ isp_if.wan }}"

# Interface maximum speed
IFACE_MAX="{{ isp_rate.iface }}"
# Maximum download speed (speedtest.net speed)
DOWNLOAD_MAX="{{ isp_rate.down }}"
# Maximum upload speed (speedtest.net speed)
UPLOAD_MAX="{{ isp_rate.up }}"

TC="/sbin/tc"
PY="/usr/bin/python2.7"

QOS_RATIO_C2="0.85" # Maximum internet speed
  QOS_RATIO_C11="0.4" # Priority 1
  QOS_RATIO_C12="0.4" # Priority 2
  QOS_RATIO_C13="0.2" # Other
    QOS_RATIO_C21="0.70" # tcp/80, tcp/443, tcp/21
      QOS_RATIO_C31="0.7" # Browsing
      QOS_RATIO_C32="0.3" # Downloading
    QOS_RATIO_C22="0.10" # Thrash
    QOS_RATIO_C23="0.20" # Crew
QOS_RATIO_C3="0.2" # Reserved for interface communication (e.g. L2, routing protocols)

QOS_DOWNLOAD_C1=${IFACE_MAX} # Maximum interface speed
  QOS_DOWNLOAD_C2=`$PY -c 'from math import ceil; print "%.0f" % ceil('${DOWNLOAD_MAX}' * '${QOS_RATIO_C2}')'` # Maximum internet speed
    QOS_DOWNLOAD_C11=`$PY -c 'from math import ceil; print "%.0f" % ceil('${QOS_DOWNLOAD_C2}' * '${QOS_RATIO_C11}')'` # Priority 1
    QOS_DOWNLOAD_C12=`$PY -c 'from math import ceil; print "%.0f" % ceil('${QOS_DOWNLOAD_C2}' * '${QOS_RATIO_C12}')'` # Priority 2
    QOS_DOWNLOAD_C13=`$PY -c 'from math import ceil; print "%.0f" % ceil('${QOS_DOWNLOAD_C2}' * '${QOS_RATIO_C13}')'` # Other
      QOS_DOWNLOAD_C21=`$PY -c 'from math import ceil; print "%.0f" % ceil('${QOS_DOWNLOAD_C13}' * '${QOS_RATIO_C21}')'` # tcp/80, tcp/443, tcp/21
        QOS_DOWNLOAD_C31=`$PY -c 'from math import ceil; print "%.0f" % ceil('${QOS_DOWNLOAD_C21}' * '${QOS_RATIO_C31}')'` # Browsing
        QOS_DOWNLOAD_C32=`$PY -c 'from math import ceil; print "%.0f" % ceil('${QOS_DOWNLOAD_C21}' * '${QOS_RATIO_C32}')'` # Downloading
      QOS_DOWNLOAD_C22=`$PY -c 'from math import ceil; print "%.0f" % ceil('${QOS_DOWNLOAD_C13}' * '${QOS_RATIO_C22}')'` # Thrash
      QOS_DOWNLOAD_C23=`$PY -c 'from math import ceil; print "%.0f" % ceil('${QOS_DOWNLOAD_C13}' * '${QOS_RATIO_C23}')'` # Crew
  QOS_DOWNLOAD_C3=`$PY -c 'from math import ceil; print "%.0f" % ceil('${IFACE_MAX}' * '${QOS_RATIO_C3}')'` # Reserved for interface communication (e.g. L2, routing protocols)

QOS_UPLOAD_C1=${IFACE_MAX} # Maximum interface speed
  QOS_UPLOAD_C2=`$PY -c 'from math import ceil; print "%.0f" % ceil('${UPLOAD_MAX}' * '${QOS_RATIO_C2}')'` # Maximum internet speed
    QOS_UPLOAD_C11=`$PY -c 'from math import ceil; print "%.0f" % ceil('${QOS_UPLOAD_C2}' * '${QOS_RATIO_C11}')'` # Priority 1
    QOS_UPLOAD_C12=`$PY -c 'from math import ceil; print "%.0f" % ceil('${QOS_UPLOAD_C2}' * '${QOS_RATIO_C12}')'` # Priority 2
    QOS_UPLOAD_C13=`$PY -c 'from math import ceil; print "%.0f" % ceil('${QOS_UPLOAD_C2}' * '${QOS_RATIO_C13}')'` # Other
      QOS_UPLOAD_C21=`$PY -c 'from math import ceil; print "%.0f" % ceil('${QOS_UPLOAD_C13}' * '${QOS_RATIO_C21}')'` # tcp/80, tcp/443, tcp/21
        QOS_UPLOAD_C31=`$PY -c 'from math import ceil; print "%.0f" % ceil('${QOS_UPLOAD_C21}' * '${QOS_RATIO_C31}')'` # Browsing
        QOS_UPLOAD_C32=`$PY -c 'from math import ceil; print "%.0f" % ceil('${QOS_UPLOAD_C21}' * '${QOS_RATIO_C32}')'` # Downloading
      QOS_UPLOAD_C22=`$PY -c 'from math import ceil; print "%.0f" % ceil('${QOS_UPLOAD_C13}' * '${QOS_RATIO_C22}')'` # Thrash
      QOS_UPLOAD_C23=`$PY -c 'from math import ceil; print "%.0f" % ceil('${QOS_UPLOAD_C13}' * '${QOS_RATIO_C23}')'` # Crew
  QOS_UPLOAD_C3=`$PY -c 'from math import ceil; print "%.0f" % ceil('${IFACE_MAX}' * '${QOS_RATIO_C3}')'` # Reserved for interface communication (e.g. L2, routing protocols)

umask 022

. /lib/lsb/init-functions

tc_check() {
  $TC qdisc show | grep "fq_codel" > /dev/null
}

tc_flush() {
$TC qdisc del dev ${UPLOAD_IFACE} root
$TC qdisc del dev ${DOWNLOAD_IFACE} root
return 0
}

tc_commit() {
echo ${QOS_DOWNLOAD_C1}' / '${QOS_UPLOAD_C1}' | Maximum interface speed'
echo '   '${QOS_DOWNLOAD_C2}' / '${QOS_UPLOAD_C2}' | Maximum internet speed'
echo '       '${QOS_DOWNLOAD_C11}' / '${QOS_UPLOAD_C11}' | Priority 1 | DSCP AF41'
echo '       '${QOS_DOWNLOAD_C12}' / '${QOS_UPLOAD_C12}' | Priority 2 | DSCP AF42'
echo '       '${QOS_DOWNLOAD_C13}' / '${QOS_UPLOAD_C13}' | Other'
echo '           '${QOS_DOWNLOAD_C21}' / '${QOS_UPLOAD_C21}' | tcp/80, tcp/443, tcp/21'
echo '               '${QOS_DOWNLOAD_C31}' / '${QOS_UPLOAD_C31}' | Browsing | DSCP AF31'
echo '               '${QOS_DOWNLOAD_C32}' / '${QOS_UPLOAD_C32}' | Downloading | DSCP AF32'
echo '           '${QOS_DOWNLOAD_C22}' / '${QOS_UPLOAD_C22}' | Thrash | DSCP Best Effort'
echo '           '${QOS_DOWNLOAD_C23}' / '${QOS_UPLOAD_C23}' | Crew | DSCP AF21'
echo '   '${QOS_DOWNLOAD_C3}' / '${QOS_UPLOAD_C3}' | Reserved for interface communication'

$TC qdisc add dev ${UPLOAD_IFACE} stab linklayer ethernet mtu 1500 root handle 1: hfsc default 3
$TC class add dev ${UPLOAD_IFACE} parent 1: classid 1:1 hfsc sc rate ${QOS_UPLOAD_C1}kbit ul rate ${QOS_UPLOAD_C1}kbit
$TC class add dev ${UPLOAD_IFACE} parent 1:1 classid 1:2 hfsc sc rate ${QOS_UPLOAD_C2}kbit ul rate ${QOS_UPLOAD_C2}kbit
  $TC class add dev ${UPLOAD_IFACE} parent 1:2 classid 1:11 hfsc sc rate ${QOS_UPLOAD_C11}kbit
    $TC qdisc add dev ${UPLOAD_IFACE} parent 1:11 handle 11: fq_codel noecn limit 1200 flows 65535 target 5ms
    $TC filter add dev ${UPLOAD_IFACE} parent 11: handle 11 protocol all flow hash keys nfct-src divisor 65535
  $TC class add dev ${UPLOAD_IFACE} parent 1:2 classid 1:12 hfsc sc dmax 60ms rate ${QOS_UPLOAD_C12}kbit
    $TC qdisc add dev ${UPLOAD_IFACE} parent 1:12 handle 12: fq_codel noecn limit 1200 flows 65535 target 5ms
    $TC filter add dev ${UPLOAD_IFACE} parent 12: handle 12 protocol all flow hash keys nfct-src divisor 65535
  $TC class add dev ${UPLOAD_IFACE} parent 1:2 classid 1:13 hfsc ls dmax 100ms rate ${QOS_UPLOAD_C13}kbit
    $TC class add dev ${UPLOAD_IFACE} parent 1:13 classid 1:21 hfsc ls rate ${QOS_UPLOAD_C21}kbit
      $TC class add dev ${UPLOAD_IFACE} parent 1:21 classid 1:31 hfsc sc rate ${QOS_UPLOAD_C31}kbit
        $TC qdisc add dev ${UPLOAD_IFACE} parent 1:31 handle 31: fq_codel noecn limit 1200 flows 65535 target 5ms
        $TC filter add dev ${UPLOAD_IFACE} parent 31: handle 31 protocol all flow hash keys nfct-src divisor 65535
      $TC class add dev ${UPLOAD_IFACE} parent 1:21 classid 1:32 hfsc ls dmax 10ms rate ${QOS_UPLOAD_C32}kbit
        $TC qdisc add dev ${UPLOAD_IFACE} parent 1:32 handle 32: fq_codel noecn limit 1200 flows 65535 target 5ms
        $TC filter add dev ${UPLOAD_IFACE} parent 32: handle 32 protocol all flow hash keys nfct-src divisor 65535
    $TC class add dev ${UPLOAD_IFACE} parent 1:13 classid 1:22 hfsc ls dmax 50ms rate ${QOS_UPLOAD_C22}kbit
      $TC qdisc add dev ${UPLOAD_IFACE} parent 1:22 handle 22: fq_codel noecn limit 1200 flows 65535 target 5ms
      $TC filter add dev ${UPLOAD_IFACE} parent 22: handle 22 protocol all flow hash keys nfct-src divisor 65535
    $TC class add dev ${UPLOAD_IFACE} parent 1:13 classid 1:23 hfsc ls rate ${QOS_UPLOAD_C23}kbit
      $TC qdisc add dev ${UPLOAD_IFACE} parent 1:23 handle 23: fq_codel noecn limit 1200 flows 65535 target 5ms
      $TC filter add dev ${UPLOAD_IFACE} parent 23: handle 23 protocol all flow hash keys nfct-src divisor 65535
$TC class add dev ${UPLOAD_IFACE} parent 1:1 classid 1:3 hfsc ls rate ${QOS_UPLOAD_C3}kbit
  $TC qdisc add dev ${UPLOAD_IFACE} parent 1:3 handle 3: fq_codel noecn limit 1200 flows 65535 target 5ms
  $TC filter add dev ${UPLOAD_IFACE} parent 3: handle 3 protocol all flow hash keys nfct-src divisor 65535

$TC filter add dev ${UPLOAD_IFACE} parent 1: protocol arp basic classid 1:3
$TC filter add dev ${UPLOAD_IFACE} parent 1: handle 11 fw classid 1:11 # DSCP AF41
$TC filter add dev ${UPLOAD_IFACE} parent 1: handle 12 fw classid 1:12 # DSCP AF42
$TC filter add dev ${UPLOAD_IFACE} parent 1: handle 31 fw classid 1:31 # DSCP AF31
$TC filter add dev ${UPLOAD_IFACE} parent 1: handle 32 fw classid 1:32 # DSCP AF32
$TC filter add dev ${UPLOAD_IFACE} parent 1: handle 22 fw classid 1:22 # DSCP Best Effort
$TC filter add dev ${UPLOAD_IFACE} parent 1: handle 23 fw classid 1:23 # DSCP AF21
$TC filter add dev ${UPLOAD_IFACE} parent 1: handle 3 fw classid 1:3

$TC qdisc add dev ${DOWNLOAD_IFACE} stab linklayer ethernet mtu 1500 root handle 1: hfsc default 3
$TC class add dev ${DOWNLOAD_IFACE} parent 1: classid 1:1 hfsc sc rate ${QOS_DOWNLOAD_C1}kbit ul rate ${QOS_DOWNLOAD_C1}kbit
$TC class add dev ${DOWNLOAD_IFACE} parent 1:1 classid 1:2 hfsc sc rate ${QOS_DOWNLOAD_C2}kbit ul rate ${QOS_DOWNLOAD_C2}kbit
  $TC class add dev ${DOWNLOAD_IFACE} parent 1:2 classid 1:11 hfsc sc rate ${QOS_DOWNLOAD_C11}kbit
    $TC qdisc add dev ${DOWNLOAD_IFACE} parent 1:11 handle 11: fq_codel noecn limit 1200 flows 65535 target 5ms
    $TC filter add dev ${DOWNLOAD_IFACE} parent 11: handle 11 protocol all flow hash keys nfct-src divisor 65535
  $TC class add dev ${DOWNLOAD_IFACE} parent 1:2 classid 1:12 hfsc sc dmax 60ms rate ${QOS_DOWNLOAD_C12}kbit
    $TC qdisc add dev ${DOWNLOAD_IFACE} parent 1:12 handle 12: fq_codel noecn limit 1200 flows 65535 target 5ms
    $TC filter add dev ${DOWNLOAD_IFACE} parent 12: handle 12 protocol all flow hash keys nfct-src divisor 65535
  $TC class add dev ${DOWNLOAD_IFACE} parent 1:2 classid 1:13 hfsc ls dmax 100ms rate ${QOS_DOWNLOAD_C13}kbit
    $TC class add dev ${DOWNLOAD_IFACE} parent 1:13 classid 1:21 hfsc ls rate ${QOS_DOWNLOAD_C21}kbit
      $TC class add dev ${DOWNLOAD_IFACE} parent 1:21 classid 1:31 hfsc sc rate ${QOS_DOWNLOAD_C31}kbit
        $TC qdisc add dev ${DOWNLOAD_IFACE} parent 1:31 handle 31: fq_codel noecn limit 1200 flows 65535 target 5ms
        $TC filter add dev ${DOWNLOAD_IFACE} parent 31: handle 31 protocol all flow hash keys nfct-src divisor 65535
      $TC class add dev ${DOWNLOAD_IFACE} parent 1:21 classid 1:32 hfsc ls dmax 10ms rate ${QOS_DOWNLOAD_C32}kbit
        $TC qdisc add dev ${DOWNLOAD_IFACE} parent 1:32 handle 32: fq_codel noecn limit 1200 flows 65535 target 5ms
        $TC filter add dev ${DOWNLOAD_IFACE} parent 32: handle 32 protocol all flow hash keys nfct-src divisor 65535
    $TC class add dev ${DOWNLOAD_IFACE} parent 1:13 classid 1:22 hfsc ls dmax 50ms rate ${QOS_DOWNLOAD_C22}kbit
      $TC qdisc add dev ${DOWNLOAD_IFACE} parent 1:22 handle 22: fq_codel noecn limit 1200 flows 65535 target 5ms
      $TC filter add dev ${DOWNLOAD_IFACE} parent 22: handle 22 protocol all flow hash keys nfct-src divisor 65535
    $TC class add dev ${DOWNLOAD_IFACE} parent 1:13 classid 1:23 hfsc ls rate ${QOS_DOWNLOAD_C23}kbit
      $TC qdisc add dev ${DOWNLOAD_IFACE} parent 1:23 handle 23: fq_codel noecn limit 1200 flows 65535 target 5ms
      $TC filter add dev ${DOWNLOAD_IFACE} parent 23: handle 23 protocol all flow hash keys nfct-src divisor 65535
$TC class add dev ${DOWNLOAD_IFACE} parent 1:1 classid 1:3 hfsc ls rate ${QOS_DOWNLOAD_C3}kbit
  $TC qdisc add dev ${DOWNLOAD_IFACE} parent 1:3 handle 3: fq_codel noecn limit 1200 flows 65535 target 5ms
  $TC filter add dev ${DOWNLOAD_IFACE} parent 3: handle 3 protocol all flow hash keys nfct-src divisor 65535


$TC filter add dev ${DOWNLOAD_IFACE} parent 1: protocol arp basic classid 1:3
$TC filter add dev ${DOWNLOAD_IFACE} parent 1: handle 11 fw classid 1:11 # DSCP AF41
$TC filter add dev ${DOWNLOAD_IFACE} parent 1: handle 12 fw classid 1:12 # DSCP AF42
$TC filter add dev ${DOWNLOAD_IFACE} parent 1: handle 31 fw classid 1:31 # DSCP AF31
$TC filter add dev ${DOWNLOAD_IFACE} parent 1: handle 32 fw classid 1:32 # DSCP AF32
$TC filter add dev ${DOWNLOAD_IFACE} parent 1: handle 22 fw classid 1:22 # DSCP Best Effort
$TC filter add dev ${DOWNLOAD_IFACE} parent 1: handle 23 fw classid 1:23 # DSCP AF21
$TC filter add dev ${DOWNLOAD_IFACE} parent 1: handle 3 fw classid 1:3

return 0
}

export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"

case "$1" in
  start)
        log_daemon_msg "Committing TC rules" "tc" || true
        if tc_commit; then
            log_end_msg 0 || true
            exit 0
        else
            log_end_msg 1 || true
            exit 1
        fi
        ;;
  stop)
        log_daemon_msg "Flushing TC rules" "tc" || true
        if tc_flush; then
            log_end_msg 0 || true
            exit 0
        else
            log_end_msg 1 || true
            exit 1
        fi
        ;;

  reload|force-reload)
        log_daemon_msg "Flushing TC rules" "tc" || true
        if tc_flush; then
          log_end_msg 0 || true
        fi
        log_daemon_msg "Committing TC rules" "tc" || true
        if tc_commit; then
            log_end_msg 0 || true
            exit 0
        else
            log_end_msg 1 || true
            exit 1
        fi
        ;;

  restart)
        log_daemon_msg "Flushing TC rules" "tc" || true
        if tc_flush; then
          log_end_msg 0 || true
        fi
        log_daemon_msg "Committing TC rules" "tc" || true
        if tc_commit; then
            log_end_msg 0 || true
            exit 0
        else
            log_end_msg 1 || true
            exit 1
        fi
        ;;

  status)
        log_daemon_msg "Checking" "tc"
        if tc_check; then
          log_end_msg 0
          exit 0
        else
          log_end_msg 1
          exit 1
        fi
        ;;

  *)
        log_action_msg "Usage: /etc/init.d/tc {start|stop|reload|force-reload|restart|status}" || true
        exit 1
esac

exit 0
